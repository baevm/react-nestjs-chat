// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @unique
  username String    @unique
  avatar   String?
  password String
  hashedRt String?
  lastSeen DateTime?

  messages Message[]
  folders  Folder[]
  chats    Participants[]

  updatedAt DateTime   @updatedAt
  createdAt DateTime   @default(now())
  contacts  Contacts[] @relation(name: "contacts")
  contactBy Contacts[] @relation(name: "contactBy")
}

model Contacts {
  id     String @id @unique @default(cuid())
  userId String
  user   User   @relation(name: "contacts", fields: [userId], references: [id], onDelete: Cascade)

  contactId String
  contact   User   @relation(name: "contactBy", fields: [contactId], references: [id], onDelete: Cascade)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Chat {
  id           String         @id @unique @default(cuid())
  title        String
  type         String
  messages     Message[]
  participants Participants[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Participants {
  id          String @id @unique @default(cuid())
  userId      String
  chatId      String
  unreadCount Int    @default(0)

  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  updatedAt      DateTime         @updatedAt
  createdAt      DateTime         @default(now())
  UnreadMessages UnreadMessages[]
}

model Message {
  id              String  @id @unique
  text            String
  userId          String
  chatId          String
  parentMessageId String?

  chat     Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  reply_to Message? @relation(name: "ParentMessage", fields: [parentMessageId], references: [id])

  replies  Message[]        @relation(name: "ParentMessage")
  unreadBy UnreadMessages[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model UnreadMessages {
  id            String @id @unique @default(cuid())
  messageId     String
  participantId String

  participant Participants @relation(fields: [participantId], references: [id], onDelete: Cascade)
  message     Message      @relation(fields: [messageId], references: [id], onDelete: Cascade)
}

model Folder {
  id   String @id @unique @default(cuid())
  name String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
